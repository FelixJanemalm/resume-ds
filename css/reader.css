:root {
    --font-size: clamp(2rem, 8vmin + 1rem, 4rem);
    --opacity: 0.4;
  }
  
  html:not(:focus-within) {
    scroll-behavior: smooth;
  }
  
  [data-split] {
    font-size: var(--font-size);
    font-weight: 600;
  }
  
  .content {
    position: sticky;
    top: 0;
    min-height: 100vh;
    width: 100ch;
    padding: 2rem 0;
    max-width: calc(100% - 4rem);
    display: grid;
    place-items: center;
    margin: 0 auto;
    line-height: 1;
  }
  
  .content span {
    opacity: calc(var(--opacity) + (var(--active)));
    transition: opacity 0.5s;
  }
  
  .reader {
    background-color: var(--bg);
    --thick: 0px;
    outline: var(--thick) dashed var(--primaryText);
    outline-offset: calc(var(--thick) * -1);
    height: calc(
      ((var(--ppc) * var(--content-length) + (var(--pad) * var(--buffer))) * 1px) + 100vh
    );
  }
  
  h2 span {
    color: var(--primaryText);
  }
  
  @supports (animation-timeline: scroll()) {
    @property --active {
      inherits: true;
      initial-value: 0;
      syntax: '<number>';
    }
  
    .reader {
      view-timeline: --reader block;
    }
  
    .content span {
      animation: activate both steps(1);
      animation-timeline: --reader;
      animation-range: contain calc(((var(--start, 0) * var(--ppc)) * 1px))
        contain calc(((var(--end, 0) * var(--ppc)) * 1px));
    }
  
    @keyframes activate {
      to {
        --active: 1;
      }
    }

    .after-reader {
        animation: scale-up both ease-in;
        animation-timeline: view(0vh 90vh);
        /*animation-timeline: view(200vh -180vh); */
        animation-range: enter;
        view-timeline: --after-reader block;
      }
    
      @keyframes scale-up {
        from {
          transform: scale(0.1); /* Start from a smaller scale */
        }
        to {
          transform: scale(.66); /* End at a larger scale */
        }
      }
  }
  
  .after-reader {
    transform-origin: top;
    margin-left: auto;
    margin-right: auto;
    width: 100%;
    translate: 0 calc(((var(--ppc) * var(--content-length) + (var(--pad) * var(--buffer))) * 1px) - (360px - (var(--text-container-height)/2)));
    /* translate: 0 -61vh; 
    margin-bottom: -80vh; */
  }

  .after-reader video {
    width: 100%;
    border-radius: 20px;
  }

  .spacer {
    height: calc(32.5vw * 1.4);
    background-color: var(--bg);
  }

  @media (min-width: 1830px) {

    .after-reader {
        max-width: 80vw;
        translate: 0 calc(((var(--ppc) * var(--content-length) + (var(--pad) * var(--buffer))) * 1px) - (560px - (var(--text-container-height)/2)));
        animation-timeline: view(60vh -80vh);
      }
    
      .spacer {
        height: 32.5vw;
      }

  }

  @media (max-width: 700px) {

    .after-reader {
        width: calc(100vw - 40px);
      }
    
      .spacer {
        height: calc(40vw * 2);
      }

    @keyframes scale-up {
    from {
        transform: scale(0.1); /* Start from a smaller scale */
    }
    to {
        transform: scale(1); /* End at a larger scale */
    }
    }

  }
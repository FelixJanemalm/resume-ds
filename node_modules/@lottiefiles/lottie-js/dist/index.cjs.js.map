{"version":3,"file":"index.cjs.js","sources":["../src/assets/asset.ts","../src/assets/image-asset.ts","../src/constants/asset-type.ts","../src/assets/precomposition-asset.ts","../src/constants/blend-mode.ts","../src/constants/fill-rule-type.ts","../src/constants/gradient-fill-type.ts","../src/constants/gradient-stroke-type.ts","../src/constants/layer-type.ts","../src/constants/line-cap-type.ts","../src/constants/line-join-type.ts","../src/constants/mask-mode.ts","../src/constants/property-type.ts","../src/constants/shape-type.ts","../src/constants/trim-mode.ts","../src/constants/repeater-composite.ts","../src/constants/star-type.ts","../src/timeline/key-frame.ts","../src/utils/use-registry.ts","../src/properties/property.ts","../src/properties/gradient.ts","../src/layers/layer.ts","../src/layers/group-layer.ts","../src/layers/image-layer.ts","../src/layers/precomposition-layer.ts","../src/shapes/shape.ts","../src/shapes/ellipse-shape.ts","../src/shapes/fill-shape.ts","../src/shapes/gradient-fill-shape.ts","../src/shapes/path-shape.ts","../src/shapes/rectangle-shape.ts","../src/shapes/stroke-shape.ts","../src/shapes/trim-shape.ts","../src/shapes/group-shape.ts","../src/layers/shape-layer.ts","../src/layers/solid-layer.ts","../src/layers/text-layer.ts","../src/markers/marker.ts","../src/utils/color-spaces.ts","../src/animation/meta.ts","../src/animation/animation.ts","../src/masks/mask.ts","../src/shapes/gradient-stroke-shape.ts","../src/shapes/repeater-shape.ts","../src/shapes/star-shape.ts","../src/shapes/rounded-corners-shape.ts"],"sourcesContent":["/**\n * Asset base class.\n */\nexport abstract class Asset {\n  public abstract fromJSON(json: Record<string, any>): Asset;\n  public abstract toJSON(): Record<string, any>;\n\n  /**\n   * Parent instance.\n   */\n  public parent: any;\n\n  /**\n   * Constructor.\n   *\n   * @param parent   Parent instance.\n   */\n  constructor(parent: any) {\n    this.parent = parent;\n  }\n}\n","import { Asset } from './asset';\n\n/**\n * Image asset type.\n */\nexport class ImageAsset extends Asset {\n  public data?: string;\n\n  public id?: string;\n\n  public height!: number;\n\n  public path?: string;\n\n  public width!: number;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       ImageAsset instance\n   */\n  public fromJSON(json: Record<string, any>): ImageAsset {\n    this.data = json.p;\n    this.id = json.id;\n    this.height = json.h;\n    this.path = json.u;\n    this.width = json.w;\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      h: this.height,\n      i: this.id,\n      p: this.data,\n      u: this.path,\n      w: this.width,\n    };\n  }\n}\n","export enum AssetType {\n  PRECOMPOSITION = 0,\n  IMAGE = 1,\n}\n","import { AssetType } from '../constants/asset-type';\nimport { Layer } from '../layers';\nimport { Asset } from './asset';\n\n/**\n * Precomposition asset type.\n */\nexport class PrecompositionAsset extends Asset {\n  public readonly type = AssetType.PRECOMPOSITION;\n\n  public layers: Layer[] = [];\n\n  public id = '';\n\n  public timeRemap: any;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       PrecompositionAsset instance\n   */\n  public fromJSON(json: Record<string, any>): PrecompositionAsset {\n    // This asset props\n    this.id = json.id;\n    this.timeRemap = json.tm;\n\n    this.layers = json.layers\n      .map((jLayer: Record<string, any>) => this.parent.createLayerFromJSON(jLayer))\n      .filter(Boolean);\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      id: this.id,\n      layers: this.layers,\n      tm: this.timeRemap,\n    };\n  }\n}\n","export enum BlendMode {\n  NORMAL = 0,\n  MULTIPLY = 1,\n  SCREEN = 2,\n  OVERLAY = 3,\n  DARKEN = 4,\n  LIGHTEN = 5,\n  COLOR_DODGE = 6,\n  COLOR_BURN = 7,\n  HARD_LIGHT = 8,\n  SOFT_LIGHT = 9,\n  DIFFERENCE = 10,\n  EXCLUSION = 11,\n  HUE = 12,\n  SATURATION = 13,\n  COLOR = 14,\n  LUMINOSITY = 15,\n}\n","export enum FillRuleType {\n  EVEN_ODD = 1,\n  NONZERO = 2,\n}\n","export enum GradientFillType {\n  NONE = 0,\n  LINEAR = 1,\n  RADIAL = 2,\n  ANGULAR = 4,\n  REFLECTED = 5,\n  DIAMOND = 6,\n}\n","export enum GradientStrokeType {\n  LINEAR = 1,\n  RADIAL = 2,\n}\n","/**\n * LayerType type.\n */\nexport enum LayerType {\n  PRECOMPOSITION = 0,\n  SOLID = 1,\n  IMAGE = 2,\n  GROUP = 3,\n  SHAPE = 4,\n  TEXT = 5,\n  AUDIO = 6,\n  VIDEO_PLACEHOLDER = 7,\n  IMAGE_SEQUENCE = 8,\n  VIDEO = 9,\n  IMAGE_PLACEHOLDER = 10,\n  GUIDE = 11,\n  ADJUSTMENT = 12,\n  CAMERA = 13,\n  LIGHT = 14,\n}\n","export enum LineCapType {\n  BUTT = 1,\n  ROUND = 2,\n  PROJECTING = 3,\n}\n","export enum LineJoinType {\n  MITER = 1,\n  ROUND = 2,\n  BEVEL = 3,\n}\n","export enum MaskMode {\n  None = 'n',\n  Add = 'a',\n  Subtract = 's',\n  Intersect = 'i',\n  Lighten = 'l',\n  Darken = 'd',\n  Difference = 'f',\n}\n","export enum PropertyType {\n  ANCHOR = 'a',\n  OPACITY = 'o',\n  POSITION = 'p',\n  ROTATION = 'r',\n  ROTATION_X = 'rx',\n  ROTATION_Y = 'ry',\n  ROTATION_Z = 'rz',\n  SCALE = 's',\n  SKEW_AXIS = 'sa',\n  SKEW = 'sk',\n  SHAPE = 'sh',\n  EXPANSION = 'x',\n  FEATHER = 'f',\n  SIZE = 'sz',\n  ROUNDNESS = 'rd',\n  MITER_LIMIT = 'ml',\n  STROKE_WIDTH = 'sw',\n  NUMBER = 'nu',\n  COLOR = 'cl',\n  ORIENTATION = 'or',\n}\n","export enum ShapeType {\n  ELLIPSE = 'el',\n  FILL = 'fl',\n  GRADIENT_FILL = 'gf',\n  GRADIENT_STROKE = 'gs',\n  GROUP = 'gr',\n  MERGE = 'mm',\n  OFFSET_PATH = 'op',\n  PATH = 'sh',\n  RECTANGLE = 'rc',\n  REPEATER = 'rp',\n  ROUNDED_CORNERS = 'rd',\n  STAR = 'sr',\n  STROKE = 'st',\n  TRIM = 'tm',\n  TWIST = 'tw',\n}\n","export enum TrimMode {\n  SIMULTANEOUSLY = 1,\n  INDIVIDUALLY = 2,\n}\n","export enum RepeaterComposite {\n  ABOVE = 1,\n  BELOW = 2,\n}\n","export enum StarType {\n  STAR = 1,\n  POLYGON = 2,\n}\n","/**\n * Represents a keyframe in the timeline with the frame number and associated property value.\n */\nexport class KeyFrame {\n  public frame = 0;\n  public value: number | number[] = 0;\n  public frameInTangent?: [number, number];\n  public frameOutTangent?: [number, number];\n  public valueInTangent?: [number, number];\n  public valueOutTangent?: [number, number];\n  public hold = false;\n\n  public constructor(frame = 0, value: number | number[] = 0) {\n    this.frame = frame;\n    this.value = value;\n  }\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       KeyFrame instance\n   */\n  public fromJSON(json: Record<string, any>): KeyFrame {\n    this.frame = json.t;\n    this.value = json.s;\n\n    const hasFrameTangents = 'i' in json && 'o' in json;\n    const hasValueTangents = 'ti' in json && 'to' in json;\n\n    this.frameInTangent = hasFrameTangents ? [json.i.x, json.i.y] : undefined;\n    this.frameOutTangent = hasFrameTangents ? [json.o.x, json.o.y] : undefined;\n\n    this.valueInTangent = hasValueTangents\n      ? ['x' in json.ti ? json.ti.x : json.ti[0], 'y' in json.ti ? json.ti.y : json.ti[1]]\n      : undefined;\n    this.valueOutTangent = hasValueTangents\n      ? ['x' in json.to ? json.to.x : json.to[0], 'y' in json.to ? json.to.y : json.to[1]]\n      : undefined;\n\n    this.hold = 'h' in json && json.h;\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    const json: Record<string, any> = {\n      // This shape\n      t: this.frame,\n      s: this.value,\n    };\n\n    if (this.hold) {\n      json.h = 1;\n    } else if (this.frameInTangent && this.frameOutTangent) {\n      json.i = { x: this.frameInTangent[0], y: this.frameInTangent[1] };\n      json.o = { x: this.frameOutTangent[0], y: this.frameOutTangent[1] };\n    }\n\n    if (this.valueInTangent && this.valueOutTangent) {\n      json.ti = [this.valueInTangent[0], this.valueInTangent[1]];\n      json.to = [this.valueOutTangent[0], this.valueOutTangent[1]];\n    }\n\n    return json;\n  }\n}\n","import { Property } from '../properties';\n\n/**\n * Global store to keep track of properties and values\n */\nconst registry: Map<Property, any> = new Map();\n\n/**\n * Returns the instance of registry.\n */\nexport function useRegistry(): Map<Property, any> {\n  return registry;\n}\n","import { PropertyType } from '../constants';\nimport { KeyFrame } from '../timeline';\nimport { useRegistry } from '../utils/use-registry';\n\n/**\n * Represents animated properties of layers and shapes.\n */\nexport class Property {\n  public UID = 0;\n\n  public readonly type: PropertyType;\n\n  public expression?: string;\n\n  public isAnimated = false;\n\n  public index = 0;\n\n  public maxColors?: number;\n\n  public values: Array<KeyFrame> = [];\n\n  /**\n   * Parent instance.\n   *\n   * @protected\n   */\n  private _parent: any;\n\n  public getParent(): any {\n    return this._parent;\n  }\n\n  /**\n   * Constructor.\n   *\n   * @param parent      Parent instance the property belongs to.\n   * @param type        Property type.\n   */\n  constructor(parent: any, type: PropertyType, values: Array<KeyFrame> = []) {\n    this._parent = parent;\n\n    this.type = type;\n    this.values = values;\n    this.isAnimated = values.length > 1;\n\n    useRegistry().set(this, parent);\n  }\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       ShapeLayer instance\n   */\n  public fromJSON(json: Record<string, any>): Property {\n    // This property\n    this.expression = 'x' in json ? json.x : undefined;\n    this.index = json.ix;\n    this.isAnimated = json.a === 1;\n\n    this.values = this.isAnimated\n      ? json.k.map((v: Record<string, any>) => new KeyFrame().fromJSON(v))\n      : [new KeyFrame().fromJSON({ t: 0, s: json.k })];\n\n    if (this.type === PropertyType.COLOR) {\n      this.maxColors = 'p' in json ? json.p : undefined;\n\n      // this.values.forEach((kf: KeyFrame) => {\n      //   const colorParts = kf.value as [number, number, number, number];\n\n      //   kf.value = [colorParts[0], colorParts[1], colorParts[2], colorParts[3] || 1];\n      // });\n    }\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    let value;\n\n    if (this.isAnimated === false) {\n      value = this.values.length ? this.values[0].value : 0;\n    } else {\n      value = this.values;\n    }\n\n    return {\n      x: this.expression,\n      ix: this.index,\n      a: this.isAnimated ? 1 : 0,\n      k: value,\n      p: this.maxColors,\n    };\n  }\n}\n","import { PropertyType } from '../constants';\nimport { KeyFrame } from '../timeline/key-frame';\nimport { Property } from './property';\n\nexport class GradientStop {\n  public offset: number;\n  public color: number[];\n\n  constructor(offset = 0, color: number[] = []) {\n    this.offset = offset;\n    this.color = color;\n  }\n\n  get hasAlpha(): boolean {\n    return this.color.length > 3;\n  }\n\n  get red(): number {\n    return this.color[0];\n  }\n\n  get green(): number {\n    return this.color[1];\n  }\n\n  get blue(): number {\n    return this.color[2];\n  }\n\n  get alpha(): number | undefined {\n    return this.color[3];\n  }\n}\n\nclass GradientColorsProperty extends Property {\n  public colorCount = 0;\n\n  private keyframeValue(index: number): number[] {\n    if (index >= this.values.length) return [];\n    return this.values[index].value as number[];\n  }\n\n  public keyframeHasAlpha(index: number): boolean {\n    return this.keyframeValue(index).length == this.colorCount * 6;\n  }\n\n  public keframeStops(index: number): GradientStop[] {\n    const values = this.keyframeValue(index);\n    const stops: GradientStop[] = [];\n    const hasAlpha = this.keyframeHasAlpha(index);\n    for (let i = 0; i < this.colorCount; i++) {\n      const color = values.slice(i, 3);\n      if (hasAlpha) color.push(values[this.colorCount * 4 + i * 2]);\n      stops.push(new GradientStop(values[i * 4], color));\n    }\n    return stops;\n  }\n\n  public setKeyframeStops(index: number, stops: GradientStop[]) {\n    if (index >= this.values.length) return;\n    if (stops.length > this.colorCount) this.colorCount = stops.length;\n    this.values[index].value = this.stopsToArray(stops);\n  }\n\n  public addKeyframe(frame: number, stops: GradientStop[]) {\n    const keyframe: KeyFrame = new KeyFrame(frame, this.stopsToArray(stops));\n    if (stops.length > this.colorCount) this.colorCount = stops.length;\n    this.values.push(keyframe);\n    return keyframe;\n  }\n\n  private stopsToArray(stops: GradientStop[]): number[] {\n    let hasAlpha = false;\n    const result: number[] = [];\n    for (const color of stops) {\n      result.push(color.offset);\n      result.push(color.red);\n      result.push(color.green);\n      result.push(color.blue);\n      if (color.hasAlpha) hasAlpha = true;\n    }\n\n    if (hasAlpha) {\n      for (const color of stops) {\n        result.push(color.offset);\n        result.push(color.alpha !== undefined ? color.alpha : 1);\n      }\n    }\n\n    return result;\n  }\n}\n\nexport class Gradient {\n  public gradientColors: GradientColorsProperty = new GradientColorsProperty(this, PropertyType.COLOR);\n\n  public get colorCount(): number {\n    return this.gradientColors.colorCount;\n  }\n\n  public set colorCount(count: number) {\n    this.gradientColors.colorCount = count;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      p: this.colorCount,\n      k: this.gradientColors,\n    };\n  }\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       Gradient instance\n   */\n  public fromJSON(json: Record<string, any>): Gradient {\n    this.gradientColors.fromJSON(json.k);\n    this.colorCount = json.p;\n    return this;\n  }\n}\n","import { BlendMode, LayerType, PropertyType } from '../constants';\nimport { Property } from '../properties/property';\nimport { KeyFrame } from '../timeline/key-frame';\nimport { useRegistry } from '../utils/use-registry';\n\n/**\n * Layer base class.\n */\nexport abstract class Layer {\n  public abstract readonly type: LayerType;\n\n  public abstract fromJSON(json: Record<string, any>): Layer;\n  public abstract toJSON(key?: string): Record<string, any> | undefined;\n\n  public autoOrient = false;\n  public blendMode: BlendMode = BlendMode.NORMAL;\n  public classNames: string[] = [];\n  public effects: any; // Effect[] = [];\n  public height = 0;\n  public id = '';\n  public index?: number;\n  public inPoint = 0;\n  public is3D = false;\n  public name = '';\n  public outPoint = 0;\n  public startTime = 0;\n  public timeStretch = 1;\n  public width = 0;\n\n  // Transforms\n  public opacity: Property = new Property(this, PropertyType.OPACITY);\n  public position: Property = new Property(this, PropertyType.POSITION);\n  public anchor: Property = new Property(this, PropertyType.ANCHOR);\n  public scale: Property = new Property(this, PropertyType.SCALE);\n\n  public orientation?: Property;\n  public rotation?: Property;\n  public rotationX?: Property;\n  public rotationY?: Property;\n  public rotationZ?: Property;\n\n  /**\n   * Parent instance.\n   *\n   * @protected\n   */\n  protected parent: any;\n\n  /**\n   * Constructor.\n   *\n   * @param parent   Parent instance.\n   */\n  constructor(parent: any) {\n    this.parent = parent;\n  }\n\n  /**\n   * Returns all the colors used in the layer.\n   *\n   * @returns Array of colors.\n   */\n  public get colors(): string[] {\n    const colors: Set<string> = new Set();\n    const registry = useRegistry();\n\n    [...registry.keys()]\n      // Filter this layer's color properties\n      .filter((p: Property) => registry.get(p) === this && p.type === PropertyType.COLOR)\n      .forEach((cp: Property) => {\n        cp.values.forEach((v: KeyFrame) => {\n          colors.add(JSON.stringify(v.value));\n        });\n      });\n\n    return Array.from(colors).map(c => JSON.parse(c));\n  }\n\n  /**\n   * Returns the total number of frames in the animation.\n   *\n   * @returns Number of frames.\n   */\n  public get totalFrames(): number {\n    return this.outPoint - this.inPoint;\n  }\n}\n","import { LayerType, PropertyType } from '../constants';\nimport { Property } from '../properties';\nimport { Layer } from './layer';\n\n/**\n * Group layer type.\n */\nexport class GroupLayer extends Layer {\n  public readonly type = LayerType.GROUP;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       GroupLayer instance\n   */\n  public fromJSON(json: Record<string, any>): GroupLayer {\n    // Base layer props\n    this.autoOrient = json.ao === 1;\n    this.blendMode = json.bm;\n    this.effects = json.ef;\n    this.height = json.h;\n    this.id = json.ld;\n    this.index = json.ind;\n    this.inPoint = json.ip;\n    this.is3D = json.ddd;\n    this.name = json.nm;\n    this.outPoint = json.op;\n    this.parent = json.parent;\n    this.startTime = json.st;\n    this.timeStretch = json.sr;\n    this.width = json.w;\n\n    // Split classnames into array\n    if ('cl' in json) {\n      this.classNames = json.cl.split(' ');\n    }\n\n    // This layer props\n    this.opacity.fromJSON(json.ks.o);\n    this.position.fromJSON(json.ks.p);\n    this.anchor.fromJSON(json.ks.a);\n    this.scale.fromJSON(json.ks.s);\n\n    this.rotation = new Property(this, PropertyType.ROTATION).fromJSON(json.ks.r);\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      // Base layer props\n      ao: this.autoOrient ? 1 : 0,\n      bm: this.blendMode,\n      cl: this.classNames.length ? this.classNames.join(' ') : undefined,\n      ddd: this.is3D ? 1 : 0,\n      ef: this.effects,\n      h: this.height,\n      ind: this.index,\n      ip: this.inPoint,\n      ks: {\n        a: this.anchor,\n        o: this.opacity,\n        p: this.position,\n        r: this.rotation,\n        s: this.scale,\n      },\n      ln: this.id,\n      nm: this.name,\n      op: this.outPoint,\n      parent: this.parent,\n      sr: this.timeStretch,\n      st: this.startTime,\n      ty: this.type,\n      w: this.width,\n    };\n  }\n}\n","import { LayerType, PropertyType } from '../constants';\nimport { Property } from '../properties';\nimport { Layer } from './layer';\n\n/**\n * Image layer type.\n */\nexport class ImageLayer extends Layer {\n  public readonly type = LayerType.IMAGE;\n\n  public refId!: string;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       ImageLayer instance\n   */\n  public fromJSON(json: Record<string, any>): ImageLayer {\n    // Base layer props\n    this.autoOrient = json.ao === 1;\n    this.blendMode = json.bm;\n    this.effects = json.ef;\n    this.height = json.h;\n    this.id = json.ld;\n    this.index = json.ind;\n    this.inPoint = json.ip;\n    this.is3D = json.ddd;\n    this.name = json.nm;\n    this.outPoint = json.op;\n    this.parent = json.parent;\n    this.startTime = json.st;\n    this.timeStretch = json.sr;\n    this.width = json.w;\n\n    // Split classnames into array\n    if ('cl' in json) {\n      this.classNames = json.cl.split(' ');\n    }\n\n    // Transforms\n    this.opacity.fromJSON(json.ks.o);\n    this.position.fromJSON(json.ks.p);\n    this.anchor.fromJSON(json.ks.a);\n    this.scale.fromJSON(json.ks.s);\n\n    this.rotation = new Property(this, PropertyType.ROTATION).fromJSON(json.ks.r);\n\n    // This layer props\n    this.refId = json.refId;\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      ty: this.type,\n\n      // Base layer props\n      ao: this.autoOrient ? 1 : 0,\n      bm: this.blendMode,\n      cl: this.classNames.length ? this.classNames.join(' ') : undefined,\n      ddd: this.is3D ? 1 : 0,\n      ef: this.effects,\n      h: this.height,\n      ind: this.index,\n      ip: this.inPoint,\n      ks: {\n        a: this.anchor,\n        o: this.opacity,\n        p: this.position,\n        r: this.rotation,\n        s: this.scale,\n      },\n      ln: this.id,\n      nm: this.name,\n      op: this.outPoint,\n      parent: this.parent,\n      sr: this.timeStretch,\n      st: this.startTime,\n      w: this.width,\n\n      // This layer props\n      refId: this.refId,\n    };\n  }\n}\n","import { LayerType, PropertyType } from '../constants';\nimport { Property } from '../properties';\nimport { Layer } from './layer';\n\n/**\n * Precomposition layer type.\n */\nexport class PrecompositionLayer extends Layer {\n  public readonly type = LayerType.PRECOMPOSITION;\n\n  public refId?: string;\n\n  public timeRemap: any;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       PrecompositionLayer instance\n   */\n  public fromJSON(json: Record<string, any>): PrecompositionLayer {\n    // Base layer props\n    this.autoOrient = json.ao === 1;\n    this.blendMode = json.bm;\n    this.effects = json.ef;\n    this.height = json.h;\n    this.id = json.ld;\n    this.index = json.ind;\n    this.inPoint = json.ip;\n    this.is3D = json.ddd;\n    this.name = json.nm;\n    this.outPoint = json.op;\n    this.parent = json.parent;\n    this.startTime = json.st;\n    this.timeStretch = json.sr;\n    this.width = json.w;\n\n    // Split classnames into array\n    if ('cl' in json) {\n      this.classNames = json.cl.split(' ');\n    }\n\n    // Transforms\n    this.opacity.fromJSON(json.ks.o);\n    this.position.fromJSON(json.ks.p);\n    this.anchor.fromJSON(json.ks.a);\n    this.scale.fromJSON(json.ks.s);\n\n    this.rotation = new Property(this, PropertyType.ROTATION).fromJSON(json.ks.r);\n\n    // This layer props\n    this.refId = json.refId;\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      ao: this.autoOrient ? 1 : 0,\n      bm: this.blendMode,\n      cl: this.classNames.length ? this.classNames.join(' ') : undefined,\n      ddd: this.is3D ? 1 : 0,\n      ef: this.effects,\n      h: this.height,\n      ind: this.index,\n      ip: this.inPoint,\n      ks: {\n        a: this.anchor,\n        o: this.opacity,\n        p: this.position,\n        r: this.rotation,\n        s: this.scale,\n      },\n      ln: this.id,\n      nm: this.name,\n      op: this.outPoint,\n      parent: this.parent,\n      refId: this.refId,\n      sr: this.timeStretch,\n      st: this.startTime,\n      ty: this.type,\n      w: this.width,\n    };\n  }\n}\n","import { ShapeType } from '../constants';\n\n/**\n * Shape base class.\n */\nexport abstract class Shape {\n  /**\n   * Shape type\n   */\n  public abstract readonly type: ShapeType;\n\n  public abstract fromJSON(json: Record<string, any>): Shape;\n  public abstract toJSON(): Record<string, any>;\n\n  public classNames?: string;\n\n  public matchName?: string;\n\n  public name?: string;\n\n  public id?: string;\n\n  public itemIndex?: number;\n  public shapeIndex?: number;\n\n  public isHidden = false;\n\n  /**\n   * Parent instance.\n   */\n  public parent: any;\n\n  /**\n   * Constructor.\n   *\n   * @param parent   Parent instance.\n   */\n  constructor(parent: any) {\n    this.parent = parent;\n  }\n}\n","import { PropertyType, ShapeType } from '../constants';\nimport { Property } from '../properties';\nimport { Shape } from './shape';\n\n/**\n * Ellipse shape type.\n */\nexport class EllipseShape extends Shape {\n  /**\n   * Shape type\n   */\n  public readonly type = ShapeType.ELLIPSE;\n\n  public position: Property = new Property(this, PropertyType.POSITION);\n\n  public size: Property = new Property(this, PropertyType.SIZE);\n\n  public direction = 1;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       EllipseShape instance\n   */\n  public fromJSON(json: Record<string, any>): EllipseShape {\n    // Base shape\n    this.classNames = json.cl;\n    this.id = json.ln;\n    this.isHidden = json.hd;\n    this.matchName = json.mn;\n    this.name = json.nm;\n\n    // This shape\n    this.position.fromJSON(json.p);\n    this.size.fromJSON(json.s);\n    this.direction = json.d;\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      ty: this.type,\n\n      // Base shape\n      cl: this.classNames,\n      hd: this.isHidden,\n      ln: this.id,\n      mn: this.matchName,\n      nm: this.name,\n\n      // This shape\n      p: this.position,\n      s: this.size,\n      d: this.direction,\n    };\n  }\n}\n","import { BlendMode, FillRuleType } from '../constants';\nimport { PropertyType } from '../constants/property-type';\nimport { ShapeType } from '../constants/shape-type';\nimport { Property } from '../properties';\nimport { Shape } from './shape';\n\n/**\n * Fill shape type.\n */\nexport class FillShape extends Shape {\n  /**\n   * Fill shape type: fl\n   */\n  public readonly type = ShapeType.FILL;\n\n  public blendMode: BlendMode = BlendMode.NORMAL;\n\n  public direction?: number;\n\n  public color: Property = new Property(this, PropertyType.COLOR);\n\n  public fillRule: FillRuleType = FillRuleType.EVEN_ODD;\n\n  public opacity: Property = new Property(this, PropertyType.OPACITY);\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       FillShape instance\n   */\n  public fromJSON(json: Record<string, any>): FillShape {\n    // Base shape\n    this.classNames = json.cl;\n    this.id = json.ln;\n    this.isHidden = json.hd;\n    this.matchName = json.mn;\n    this.name = json.nm;\n\n    // This shape\n    this.blendMode = json.bm;\n    this.color.fromJSON(json.c);\n    this.fillRule = json.r in FillRuleType ? json.r : FillRuleType.EVEN_ODD;\n    this.opacity.fromJSON(json.o);\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      ty: this.type,\n\n      // Base shape\n      cl: this.classNames,\n      hd: this.isHidden,\n      ln: this.id,\n      mn: this.matchName,\n      nm: this.name,\n\n      // This shape\n      bm: this.blendMode,\n      c: this.color,\n      r: this.fillRule,\n      o: this.opacity,\n    };\n  }\n}\n","import { BlendMode, FillRuleType, GradientFillType, PropertyType, ShapeType } from '../constants';\nimport { Gradient, Property } from '../properties';\nimport { Shape } from './shape';\n\n/**\n * Gradient fill shape type.\n */\nexport class GradientFillShape extends Shape {\n  /**\n   * Gradient shape type: gf\n   */\n  public readonly type = ShapeType.GRADIENT_FILL;\n\n  public blendMode: BlendMode = BlendMode.NORMAL;\n\n  public endPoint: Property = new Property(this, PropertyType.POSITION);\n\n  public gradientColors: Gradient = new Gradient();\n\n  public gradientType: GradientFillType = GradientFillType.LINEAR;\n\n  public highlightAngle: Property = new Property(this, PropertyType.NUMBER);\n\n  public highlightLength: Property = new Property(this, PropertyType.NUMBER);\n\n  public opacity: Property = new Property(this, PropertyType.OPACITY);\n\n  public startPoint: Property = new Property(this, PropertyType.POSITION);\n\n  public fillRule: FillRuleType = FillRuleType.EVEN_ODD;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       GradientFillShape instance\n   */\n  public fromJSON(json: Record<string, any>): GradientFillShape {\n    // Base shape\n    this.classNames = json.cl;\n    this.id = json.ln;\n    this.isHidden = json.hd;\n    this.matchName = json.mn;\n    this.name = json.nm;\n\n    // This shape\n    this.blendMode = json.bm;\n    this.endPoint.fromJSON(json.e);\n    this.gradientColors.fromJSON(json.g);\n    this.gradientType = json.t;\n    this.opacity.fromJSON(json.o);\n    this.startPoint.fromJSON(json.s);\n    this.fillRule = json.r;\n\n    if (this.gradientType === GradientFillType.LINEAR) {\n      this.highlightAngle.fromJSON(json.a);\n      this.highlightLength.fromJSON(json.h);\n    }\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      ty: this.type,\n\n      // Base shape\n      cl: this.classNames,\n      hd: this.isHidden,\n      ln: this.id,\n      mn: this.matchName,\n      nm: this.name,\n\n      // This shape\n      bm: this.blendMode,\n      e: this.endPoint,\n      g: this.gradientColors,\n      t: this.gradientType,\n      a: this.highlightAngle,\n      h: this.highlightLength,\n      o: this.opacity,\n      r: this.fillRule,\n      s: this.startPoint,\n    };\n  }\n}\n","import { PropertyType, ShapeType } from '../constants';\nimport { Property } from '../properties';\nimport { Shape } from './shape';\n\n/**\n * Path shape type.\n */\nexport class PathShape extends Shape {\n  /**\n   * Path shape type: sh\n   */\n  public readonly type = ShapeType.PATH;\n\n  public direction?: number;\n\n  public vertices: Property = new Property(this, PropertyType.SHAPE);\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       PathShape instance\n   */\n  public fromJSON(json: Record<string, any>): PathShape {\n    // Base shape\n    this.classNames = json.cl;\n    this.id = json.ln;\n    this.isHidden = json.hd;\n    this.matchName = json.mn;\n    this.name = json.nm;\n    this.itemIndex = json.ind;\n    this.shapeIndex = json.ix;\n\n    // This shape\n    this.direction = json.d;\n    this.vertices = json.ks;\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      ty: this.type,\n\n      // Base shape\n      cl: this.classNames,\n      hd: this.isHidden,\n      ln: this.id,\n      mn: this.matchName,\n      nm: this.name,\n      ind: this.itemIndex,\n      ix: this.shapeIndex,\n\n      // This shape\n      d: this.direction,\n      ks: this.vertices,\n    };\n  }\n}\n","import { PropertyType, ShapeType } from '../constants';\nimport { Property } from '../properties';\nimport { Shape } from './shape';\n\n/**\n * Rectangle shape type.\n */\nexport class RectangleShape extends Shape {\n  /**\n   * Rectangle shape type: rc\n   */\n  public readonly type = ShapeType.RECTANGLE;\n\n  public direction?: number;\n\n  public position: Property = new Property(this, PropertyType.POSITION);\n\n  public roundness: Property = new Property(this, PropertyType.ROUNDNESS);\n\n  public size: Property = new Property(this, PropertyType.SIZE);\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       RectangleShape instance\n   */\n  public fromJSON(json: Record<string, any>): RectangleShape {\n    // Base shape\n    this.classNames = json.cl;\n    this.id = json.ln;\n    this.isHidden = json.hd;\n    this.matchName = json.mn;\n    this.name = json.nm;\n\n    // This shape\n    this.direction = json.d;\n    this.position.fromJSON(json.p);\n    this.roundness.fromJSON(json.r);\n    this.size.fromJSON(json.s);\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      ty: this.type,\n\n      // Base shape\n      cl: this.classNames,\n      hd: this.isHidden,\n      ln: this.id,\n      mn: this.matchName,\n      nm: this.name,\n\n      // This shape\n      d: this.direction,\n      p: this.position,\n      r: this.roundness,\n      s: this.size,\n    };\n  }\n}\n","import { BlendMode, LineCapType, LineJoinType, PropertyType, ShapeType } from '../constants';\nimport { Property } from '../properties';\nimport { Shape } from './shape';\n\n/**\n * Stroke shape type.\n */\nexport class StrokeShape extends Shape {\n  /**\n   * Shape type\n   */\n  public readonly type = ShapeType.STROKE;\n\n  public blendMode: BlendMode = BlendMode.NORMAL;\n\n  public color: Property = new Property(this, PropertyType.COLOR);\n\n  /**\n   * Line cap.\n   *\n   * Mapped field: lc\n   */\n  public lineCapType: LineCapType = LineCapType.ROUND;\n\n  /**\n   * Line join.\n   *\n   * Mapped field: lj\n   */\n  public lineJoinType: LineJoinType = LineJoinType.ROUND;\n\n  /**\n   * Miter limit.\n   *\n   * Mapped field: ml\n   */\n  public miterLimit!: number;\n\n  public opacity: Property = new Property(this, PropertyType.OPACITY);\n\n  public width: Property = new Property(this, PropertyType.STROKE_WIDTH);\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       StrokeShape instance\n   */\n  public fromJSON(json: Record<string, any>): StrokeShape {\n    // Base shape\n    this.classNames = json.cl;\n    this.id = json.ln;\n    this.isHidden = json.hd;\n    this.matchName = json.mn;\n    this.name = json.nm;\n\n    // This shape\n    this.blendMode = json.bm in BlendMode ? json.bm : BlendMode.NORMAL;\n    this.color.fromJSON(json.c);\n    this.lineCapType = json.lc in LineCapType ? json.lc : LineCapType.ROUND;\n    this.lineJoinType = json.lj in LineJoinType ? json.lj : LineJoinType.ROUND;\n    this.miterLimit = json.ml;\n    this.opacity.fromJSON(json.o);\n    this.width.fromJSON(json.w);\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      ty: this.type,\n\n      // Base shape\n      cl: this.classNames,\n      hd: this.isHidden,\n      ln: this.id,\n      mn: this.matchName,\n      nm: this.name,\n\n      // This shape\n      bm: this.blendMode,\n      c: this.color,\n      lc: this.lineCapType,\n      lj: this.lineJoinType,\n      ml: this.miterLimit,\n      o: this.opacity,\n      w: this.width,\n    };\n  }\n}\n","import { BlendMode, PropertyType, ShapeType } from '../constants';\nimport { TrimMode } from '../constants';\nimport { Property } from '../properties';\nimport { Shape } from './shape';\n\n/**\n * Trim shape type.\n */\nexport class TrimShape extends Shape {\n  /**\n   * Shape type\n   */\n  public readonly type = ShapeType.TRIM;\n\n  public blendMode: BlendMode = BlendMode.NORMAL;\n\n  public trimEnd: Property = new Property(this, PropertyType.NUMBER);\n\n  public trimOffset: Property = new Property(this, PropertyType.NUMBER);\n\n  public trimStart: Property = new Property(this, PropertyType.NUMBER);\n\n  public trimMultipleShapes: TrimMode = TrimMode.SIMULTANEOUSLY;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       TrimShape instance\n   */\n  public fromJSON(json: Record<string, any>): TrimShape {\n    // Base shape\n    this.classNames = json.cl;\n    this.id = json.ln;\n    this.isHidden = json.hd;\n    this.matchName = json.mn;\n    this.name = json.nm;\n\n    // This shape\n    this.blendMode = json.bm in BlendMode ? json.bm : BlendMode.NORMAL;\n    this.trimEnd.fromJSON(json.e);\n    this.trimOffset.fromJSON(json.o);\n    this.trimStart.fromJSON(json.s);\n    this.trimMultipleShapes = json.m in TrimMode ? json.m : TrimMode.INDIVIDUALLY;\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      ty: this.type,\n\n      // Base shape\n      cl: this.classNames,\n      hd: this.isHidden,\n      ln: this.id,\n      mn: this.matchName,\n      nm: this.name,\n\n      // This shape\n      bm: this.blendMode,\n      e: this.trimEnd,\n      o: this.trimOffset,\n      s: this.trimStart,\n      m: this.trimMultipleShapes,\n    };\n  }\n}\n","import { BlendMode, PropertyType, ShapeType } from '../constants';\nimport { Property } from '../properties';\nimport { EllipseShape } from './ellipse-shape';\nimport { FillShape } from './fill-shape';\nimport { GradientFillShape } from './gradient-fill-shape';\nimport { PathShape } from './path-shape';\nimport { RectangleShape } from './rectangle-shape';\nimport { Shape } from './shape';\nimport { StrokeShape } from './stroke-shape';\nimport { TrimShape } from './trim-shape';\n\n/**\n * Group shape type.\n */\nexport class GroupShape extends Shape {\n  /**\n   * Group shape type: gr\n   */\n  public readonly type = ShapeType.GROUP;\n\n  public anchor: Property = new Property(this, PropertyType.ANCHOR);\n\n  public blendMode: BlendMode = BlendMode.NORMAL;\n\n  public contentPropertyIndex?: number;\n\n  public isHidden = false;\n\n  public numProperties = 0;\n\n  public opacity: Property = new Property(this, PropertyType.OPACITY);\n\n  public position: Property = new Property(this, PropertyType.POSITION);\n\n  public propertyIndex?: number;\n\n  public rotation: Property = new Property(this, PropertyType.ROTATION);\n\n  public scale: Property = new Property(this, PropertyType.SCALE);\n\n  public shapes: Shape[] = [];\n\n  public skew: Property = new Property(this, PropertyType.SKEW);\n\n  public skewAxis: Property = new Property(this, PropertyType.SKEW_AXIS);\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       GroupShape instance\n   */\n  public fromJSON(json: Record<string, any>): GroupShape {\n    // Base shape\n    this.classNames = json.cl;\n    this.id = json.ln;\n    this.isHidden = json.hd;\n    this.matchName = json.mn;\n    this.name = json.nm;\n\n    // This shape\n    this.blendMode = json.bm;\n    this.contentPropertyIndex = json.cix;\n    this.propertyIndex = json.ix;\n    this.numProperties = json.np;\n\n    this.shapes = json.it\n      .map((jShape: Record<string, any>) => {\n        try {\n          if (jShape.ty !== 'tr') {\n            const nShape = this.createShape(jShape.ty);\n            return nShape.fromJSON(jShape);\n          }\n\n          this.anchor.fromJSON(jShape.a);\n          this.opacity.fromJSON(jShape.o);\n          this.position.fromJSON(jShape.p);\n          this.rotation.fromJSON(jShape.r);\n          this.scale.fromJSON(jShape.s);\n\n          if (jShape.sk) {\n            this.skew.fromJSON(jShape.sk);\n          }\n\n          if (jShape.sa) {\n            this.skewAxis.fromJSON(jShape.sa);\n          }\n        } catch {\n          // Swallow\n        }\n\n        return false;\n      })\n      .filter(Boolean);\n\n    return this;\n  }\n  /**\n   * Creates and returns a new shape instance of given type.\n   *\n   * @param type  Shape type string.\n   */\n  public createShape(type: ShapeType): Shape {\n    if (type === ShapeType.PATH) {\n      return new PathShape(this);\n    } else if (type === ShapeType.GROUP) {\n      return new GroupShape(this);\n    } else if (type === ShapeType.FILL) {\n      return new FillShape(this);\n    } else if (type === ShapeType.RECTANGLE) {\n      return new RectangleShape(this);\n    } else if (type === ShapeType.ELLIPSE) {\n      return new EllipseShape(this);\n    } else if (type === ShapeType.STROKE) {\n      return new StrokeShape(this);\n    } else if (type === ShapeType.GRADIENT_FILL) {\n      return new GradientFillShape(this);\n    } else if (type === ShapeType.TRIM) {\n      return new TrimShape(this);\n    }\n\n    throw new Error(`Invalid or unknown shape type: ${type}`);\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    const shapes = JSON.parse(JSON.stringify(this.shapes));\n\n    shapes.push({\n      ty: 'tr',\n      nm: 'Transform',\n      a: this.anchor,\n      o: this.opacity,\n      p: this.position,\n      r: this.rotation,\n      s: this.scale,\n      sk: this.skew,\n      sa: this.skewAxis,\n    });\n\n    return {\n      ty: this.type,\n\n      // Base shape\n      cl: this.classNames,\n      hd: this.isHidden,\n      ln: this.id,\n      mn: this.matchName,\n      nm: this.name,\n\n      // This shape\n      bm: this.blendMode,\n      cix: this.contentPropertyIndex,\n      it: shapes,\n      ix: this.propertyIndex,\n      np: this.numProperties,\n    };\n  }\n}\n","import { LayerType, PropertyType, ShapeType } from '../constants';\nimport { Property } from '../properties';\nimport { Shape } from '../shapes';\nimport { EllipseShape } from '../shapes/ellipse-shape';\nimport { FillShape } from '../shapes/fill-shape';\nimport { GradientFillShape } from '../shapes/gradient-fill-shape';\nimport { GroupShape } from '../shapes/group-shape';\nimport { PathShape } from '../shapes/path-shape';\nimport { RectangleShape } from '../shapes/rectangle-shape';\nimport { StrokeShape } from '../shapes/stroke-shape';\nimport { TrimShape } from '../shapes/trim-shape';\nimport { Layer } from './layer';\n\n/**\n * Shape layer type.\n */\nexport class ShapeLayer extends Layer {\n  // Shape layer type = 4\n  public readonly type = LayerType.SHAPE;\n\n  public shapes: Shape[] = [];\n\n  public skew?: Property;\n  public skewAxis?: Property;\n\n  /**\n   * Creates and returns a new shape instance of given type.\n   *\n   * @param type  Shape type string.\n   */\n  public createShape(type: ShapeType): Shape {\n    if (type === ShapeType.PATH) {\n      return new PathShape(this);\n    } else if (type === ShapeType.GROUP) {\n      return new GroupShape(this);\n    } else if (type === ShapeType.FILL) {\n      return new FillShape(this);\n    } else if (type === ShapeType.RECTANGLE) {\n      return new RectangleShape(this);\n    } else if (type === ShapeType.ELLIPSE) {\n      return new EllipseShape(this);\n    } else if (type === ShapeType.STROKE) {\n      return new StrokeShape(this);\n    } else if (type === ShapeType.GRADIENT_FILL) {\n      return new GradientFillShape(this);\n    } else if (type === ShapeType.TRIM) {\n      return new TrimShape(this);\n    }\n\n    throw new Error(`Invalid or unknown shape type: ${type}`);\n  }\n\n  /**\n   * Creates and returns a new shape instance from given JSON.\n   *\n   * @param json  JSON object.\n   */\n  public createShapeFromJSON(json: Record<string, any>): Shape {\n    try {\n      const shape = this.createShape(json.ty);\n\n      return shape.fromJSON(json);\n    } catch (e) {\n      throw new Error(`Unable to create shape from JSON: ${json.ty}`);\n    }\n  }\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       ShapeLayer instance\n   */\n  public fromJSON(json: Record<string, any>): ShapeLayer {\n    // Base layer props\n    this.autoOrient = json.ao === 1;\n    this.blendMode = json.bm;\n    this.effects = json.ef;\n    this.height = json.h;\n    this.id = json.ld;\n    this.index = json.ind;\n    this.inPoint = json.ip;\n    this.is3D = json.ddd;\n    this.name = json.nm;\n    this.outPoint = json.op;\n    this.parent = json.parent;\n    this.startTime = json.st;\n    this.timeStretch = json.sr;\n    this.width = json.w;\n\n    // Split classnames into array\n    this.classNames = 'cl' in json ? json.cl.split(' ') : [];\n\n    // Transforms\n    'o' in json.ks && this.opacity.fromJSON(json.ks.o);\n    'p' in json.ks && this.position.fromJSON(json.ks.p);\n    'a' in json.ks && this.anchor.fromJSON(json.ks.a);\n    's' in json.ks && this.scale.fromJSON(json.ks.s);\n\n    if ('or' in json.ks) {\n      this.orientation = new Property(this, PropertyType.ORIENTATION).fromJSON(json.ks.or);\n    }\n\n    if ('rx' in json.ks) {\n      this.rotationX = new Property(this, PropertyType.ROTATION_X).fromJSON(json.ks.rx);\n    }\n\n    if ('ry' in json.ks) {\n      this.rotationY = new Property(this, PropertyType.ROTATION_Y).fromJSON(json.ks.ry);\n    }\n\n    if ('rz' in json.ks) {\n      this.rotationZ = new Property(this, PropertyType.ROTATION_Z).fromJSON(json.ks.rz);\n    }\n    if ('r' in json.ks) {\n      this.rotation = new Property(this, PropertyType.ROTATION).fromJSON(json.ks.r);\n    }\n\n    // This layer props\n    this.skew = 'sk' in json.ks ? new Property(this, PropertyType.SKEW).fromJSON(json.ks.sk) : undefined;\n    this.skewAxis = 'sa' in json.ks ? new Property(this, PropertyType.SKEW_AXIS).fromJSON(json.ks.sa) : undefined;\n\n    this.shapes = json.shapes.map((jShape: Record<string, any>) => this.createShapeFromJSON(jShape)).filter(Boolean);\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      ao: this.autoOrient ? 1 : 0,\n      bm: this.blendMode,\n      cl: this.classNames.length ? this.classNames.join(' ') : undefined,\n      ddd: this.is3D ? 1 : 0,\n      ef: this.effects,\n      h: this.height,\n      ind: this.index,\n      ip: this.inPoint,\n      ks: {\n        a: this.anchor,\n        o: this.opacity,\n        p: this.position,\n        r: this.rotation,\n        s: this.scale,\n        sk: this.skew,\n        sa: this.skewAxis,\n\n        rx: this.rotationX,\n        ry: this.rotationY,\n        rz: this.rotationZ,\n        or: this.orientation,\n      },\n      shapes: this.shapes.map(shape => shape.toJSON()),\n      ln: this.id,\n      nm: this.name,\n      op: this.outPoint,\n      parent: this.parent,\n      sr: this.timeStretch,\n      st: this.startTime,\n      ty: this.type,\n      w: this.width,\n    };\n  }\n}\n","import { LayerType, PropertyType } from '../constants';\nimport { Property } from '../properties';\nimport { Layer } from './layer';\n\n/**\n * Solid layer type.\n */\nexport class SolidLayer extends Layer {\n  public readonly type = LayerType.SOLID;\n\n  public solidColor = '#000000';\n  public solidHeight = 1;\n  public solidWidth = 1;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       SolidLayer instance\n   */\n  public fromJSON(json: Record<string, any>): SolidLayer {\n    // Base layer props\n    this.autoOrient = json.ao === 1;\n    this.blendMode = json.bm;\n    this.effects = json.ef;\n    this.height = json.h;\n    this.id = json.ld;\n    this.index = json.ind;\n    this.inPoint = json.ip;\n    this.is3D = json.ddd;\n    this.name = json.nm;\n    this.outPoint = json.op;\n    this.parent = json.parent;\n    this.startTime = json.st;\n    this.timeStretch = json.sr;\n    this.width = json.w;\n\n    // Split classnames into array\n    if ('cl' in json) {\n      this.classNames = json.cl.split(' ');\n    }\n\n    // Transforms\n    this.opacity.fromJSON(json.ks.o);\n    this.position.fromJSON(json.ks.p);\n    this.anchor.fromJSON(json.ks.a);\n    this.scale.fromJSON(json.ks.s);\n\n    this.rotation = new Property(this, PropertyType.ROTATION).fromJSON(json.ks.r);\n\n    // This layer props\n    this.solidColor = json.sc;\n    this.solidHeight = json.sh;\n    this.solidWidth = json.sw;\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      // Base layer props\n      ao: this.autoOrient ? 1 : 0,\n      bm: this.blendMode,\n      cl: this.classNames.length ? this.classNames.join(' ') : undefined,\n      ddd: this.is3D ? 1 : 0,\n      ef: this.effects,\n      h: this.height,\n      ind: this.index,\n      ip: this.inPoint,\n      ks: {\n        a: this.anchor,\n        o: this.opacity,\n        p: this.position,\n        r: this.rotation,\n        s: this.scale,\n      },\n      ln: this.id,\n      nm: this.name,\n      op: this.outPoint,\n      parent: this.parent,\n      sc: this.solidColor,\n      sh: this.solidHeight,\n      sw: this.solidWidth,\n      sr: this.timeStretch,\n      st: this.startTime,\n      ty: this.type,\n      w: this.width,\n    };\n  }\n}\n","import { LayerType, PropertyType } from '../constants';\nimport { Property } from '../properties';\nimport { Layer } from './layer';\n\n/**\n * Text layer type.\n */\nexport class TextLayer extends Layer {\n  public readonly type = LayerType.TEXT;\n\n  public textData?: any;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       TextLayer instance\n   */\n  public fromJSON(json: Record<string, any>): TextLayer {\n    // Base layer props\n    this.autoOrient = json.ao === 1;\n    this.blendMode = json.bm;\n    this.effects = json.ef;\n    this.height = json.h;\n    this.id = json.ld;\n    this.index = json.ind;\n    this.inPoint = json.ip;\n    this.is3D = json.ddd;\n    this.name = json.nm;\n    this.outPoint = json.op;\n    this.parent = json.parent;\n    this.startTime = json.st;\n    this.timeStretch = json.sr;\n    this.width = json.w;\n\n    // Split classnames into array\n    if ('cl' in json) {\n      this.classNames = json.cl.split(' ');\n    }\n\n    // Transforms\n    this.opacity.fromJSON(json.ks.o);\n    this.position.fromJSON(json.ks.p);\n    this.anchor.fromJSON(json.ks.a);\n    this.scale.fromJSON(json.ks.s);\n\n    this.rotation = new Property(this, PropertyType.ROTATION).fromJSON(json.ks.r);\n\n    // This layer props\n    this.textData = json.t;\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      ty: this.type,\n\n      // Base layer props\n      ao: this.autoOrient ? 1 : 0,\n      bm: this.blendMode,\n      cl: this.classNames.length ? this.classNames.join(' ') : undefined,\n      ddd: this.is3D ? 1 : 0,\n      ef: this.effects,\n      h: this.height,\n      ind: this.index,\n      ip: this.inPoint,\n      ks: {\n        a: this.anchor,\n        o: this.opacity,\n        p: this.position,\n        r: this.rotation,\n        s: this.scale,\n      },\n      ln: this.id,\n      nm: this.name,\n      op: this.outPoint,\n      parent: this.parent,\n      sr: this.timeStretch,\n      st: this.startTime,\n      w: this.width,\n\n      // This layer props\n      t: this.textData,\n    };\n  }\n}\n","/**\n * Marker.\n */\nexport class Marker {\n  public comment = '';\n  public duration = 0;\n  public time = 0;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       Marker instance\n   */\n  public fromJSON(json: Record<string, any>): Marker {\n    this.comment = json.cm;\n    this.duration = json.dr;\n    this.time = json.tm;\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      cm: this.comment,\n      dr: this.duration,\n      tm: this.time,\n    };\n  }\n}\n","export function rgbaToHex(rgba: number[]) {\n  let r = (+rgba[0]).toString(16),\n    g = (+rgba[1]).toString(16),\n    b = (+rgba[2]).toString(16),\n    a = Math.round(+rgba[3] * 255).toString(16);\n\n  if (r.length == 1) r = '0' + r;\n  if (g.length == 1) g = '0' + g;\n  if (b.length == 1) b = '0' + b;\n  if (a.length == 1) a = '0' + a;\n\n  return '#' + r + g + b + a;\n}\nexport function hexToRgba(hex: string, alpha: number): number[] {\n  const r = parseInt(hex.slice(1, 3), 16);\n  const g = parseInt(hex.slice(3, 5), 16);\n  const b = parseInt(hex.slice(5, 7), 16);\n\n  if (alpha) {\n    return [r / 255, g / 255, b / 255, alpha];\n  }\n\n  return [r / 255, g / 255, b / 255];\n}\n","/**\n * Animation metadata information.\n */\nexport class Meta {\n  /**\n   * Author name.\n   */\n  public author?: string;\n\n  /**\n   * Keywords.\n   */\n  public keywords: string[] = [];\n\n  /**\n   * Generator.\n   */\n  public generator = process.env.GENERATOR;\n\n  /**\n   * Description.\n   */\n  public description?: string;\n\n  /**\n   * Theme color.\n   */\n  public themeColor?: string;\n\n  /**\n   * Parent instance.\n   *\n   * @protected\n   */\n  protected parent: any;\n\n  /**\n   * Constructor.\n   *\n   * @param parent   Parent instance.\n   */\n  constructor(parent: any) {\n    this.parent = parent;\n  }\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       Meta instance\n   */\n  public fromJSON(json: Record<string, any>): Meta {\n    this.author = json.a;\n    this.keywords = 'k' in json ? json.k.split(',').map((w: string) => w.trim()) : [json.k];\n    this.generator = json.g;\n    this.description = json.d;\n    this.themeColor = json.tc;\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      a: this.author,\n      k: this.keywords.length ? this.keywords : undefined,\n      g: this.generator,\n      d: this.description,\n      tc: this.themeColor,\n    };\n  }\n}\n","import fetch from 'cross-fetch';\n\nimport { Asset, ImageAsset, PrecompositionAsset } from '../assets';\nimport { AssetType, LayerType, PropertyType } from '../constants';\nimport { Layer, PrecompositionLayer, ShapeLayer } from '../layers';\n// import { Shape } from '../shapes';\nimport { GroupLayer } from '../layers/group-layer';\nimport { ImageLayer } from '../layers/image-layer';\nimport { SolidLayer } from '../layers/solid-layer';\nimport { TextLayer } from '../layers/text-layer';\nimport { Marker } from '../markers';\nimport { Property } from '../properties';\nimport { KeyFrame } from '../timeline';\nimport { rgbaToHex } from '../utils/color-spaces';\nimport { useRegistry } from '../utils/use-registry';\nimport { Meta } from './meta';\ninterface parentLocatorInterface {\n  [key: string]: string;\n}\n\n/**\n * Animation contains all the information about the Lottie animation.\n */\nexport class Animation {\n  public assets: Asset[] = [];\n  public frameRate = 0;\n  public height = 0;\n  public inPoint = 0;\n  public is3D = false;\n  public layers: Layer[] = [];\n  public markers: Marker[] = [];\n  public meta: Meta = new Meta(this);\n  public name = '';\n  public outPoint = 0;\n  public version = ``;\n  public width = 0;\n\n  /**\n   * Create a class instance from the URL to the Lottie JSON.\n   *\n   * @param url     URL string\n   * @returns       Animation instance\n   */\n  public static async fromURL(url: string): Promise<Animation> {\n    if (typeof url !== 'string') {\n      throw new Error(`The url value must be a string`);\n    }\n\n    let json;\n\n    try {\n      // Try construct an absolute URL from the src URL\n      const srcUrl: URL = new URL(url);\n\n      // Fetch the JSON file from the URL\n      const result = await fetch(srcUrl.toString());\n      json = await result.json();\n    } catch (err) {\n      throw new Error(`An error occurred while trying to load the Lottie file from URL`);\n    }\n\n    // Create a new animation instance and import JSON\n    const anim = new Animation();\n\n    return anim.fromJSON(json);\n  }\n\n  /**\n   * Returns whether the given object looks like a valid Lottie JSON structure.\n   *\n   * This method checks for the presense of the mandatory fields 'v', 'ip', 'op', 'layers', 'fr', 'w' and 'h' in the object.\n   *\n   * @param json    Object\n   * @returns       Boolean true if it is a valid Lottie\n   */\n  public static isLottie(json: Record<string, any>): boolean {\n    const mandatory = ['v', 'ip', 'op', 'layers', 'fr', 'w', 'h'];\n\n    return mandatory.every(field => Object.prototype.hasOwnProperty.call(json, field));\n  }\n\n  /*\n   * Returns all the colors used in the animation.\n   *\n   * @returns Array of colors.\n   */\n  public get colors(): string[] {\n    const colors: Set<string> = new Set();\n\n    [...useRegistry().keys()]\n      // Filter color properties\n      .filter((p: Property) => p.type === PropertyType.COLOR)\n      .forEach((cp: Property) => {\n        cp.values.forEach((v: KeyFrame) => {\n          const colorParts = v.value as [number, number, number, number];\n          colors.add(\n            JSON.stringify([\n              Math.round(colorParts[0] * 255),\n              Math.round(colorParts[1] * 255),\n              Math.round(colorParts[2] * 255),\n              colorParts[3],\n            ]),\n          );\n        });\n      });\n\n    return Array.from(colors).map(c => JSON.parse(c));\n  }\n\n  /*\n   * Returns all the colors used in the animation.\n   *\n   * @returns Array of colors.\n   */\n\n  public get colorsVerbose(): Record<string, any> {\n    const colors: parentLocatorInterface = {};\n\n    [...useRegistry().keys()]\n      // Filter color properties\n      .filter((p: Property) => p.type === PropertyType.COLOR)\n      .forEach((cp: Property, index: number) => {\n        const parent = cp.getParent();\n        const pathString = this.parentPath(parent);\n\n        const pathCopy = pathString.slice();\n\n        cp.values.forEach((v: KeyFrame) => {\n          pathCopy.unshift('Frame ' + v.frame);\n          pathCopy.unshift(index.toString());\n\n          const colorParts = v.value as [number, number, number, number];\n\n          colors[pathCopy.join('.')] = rgbaToHex([\n            Math.round(colorParts[0] * 255),\n            Math.round(colorParts[1] * 255),\n            Math.round(colorParts[2] * 255),\n            colorParts[3],\n          ]);\n        });\n      });\n\n    return colors;\n  }\n\n  /*\n   * return all the text layers with layer name\n   */\n\n  public get textLayers(): Record<string, any> {\n    const textLayers: parentLocatorInterface = {};\n    const layers = this.getLayersByType(LayerType.TEXT) as TextLayer[];\n    layers.forEach((layer, index) => {\n      textLayers[index + '.' + layer.name] = layer.textData.d.k[0].s.t;\n    });\n    return textLayers;\n  }\n\n  /*\n   * returns the names of all prents given a shape\n   */\n\n  public parentPath(shape: any, paths: string[] = []): string[] {\n    if (shape.parent === undefined) {\n      // stop recursion\n      paths.push(shape.name);\n      return paths;\n    }\n    paths.push(shape.name);\n    return this.parentPath(shape.parent, paths);\n  }\n\n  /**\n   * Returns the running time of the animation in seconds.\n   *\n   * @returns Number of seconds.\n   */\n  public get duration(): number {\n    return this.totalFrames / this.frameRate;\n  }\n\n  /**\n   * Returns the size of the Lottie JSON in bytes.\n   *\n   * @returns Number of bytes.\n   */\n  public get fileSize(): number {\n    return new TextEncoder().encode(JSON.stringify(this)).length;\n  }\n\n  /**\n   * Returns the total number of frames in the animation.\n   *\n   * @returns Number of frames.\n   */\n  public get totalFrames(): number {\n    return this.outPoint - this.inPoint;\n  }\n\n  /**\n   * Creates and returns a new asset of the given type.\n   *\n   * @param type    Asset type string.\n   */\n  public createAsset(type: AssetType): Asset {\n    if (type === AssetType.PRECOMPOSITION) {\n      return new PrecompositionAsset(this);\n    } else if (type === AssetType.IMAGE) {\n      return new ImageAsset(this);\n    }\n\n    throw new Error(`Invalid or unknown asset type ${type}`);\n  }\n\n  /**\n   * Creates and returns a new asset from JSON.\n   *\n   * @param json    JSON object.\n   */\n  public createAssetFromJSON(json: Record<string, any>): Asset {\n    try {\n      const asset = this.createAsset('layers' in json ? AssetType.PRECOMPOSITION : AssetType.IMAGE);\n\n      return asset.fromJSON(json);\n    } catch {\n      throw new Error(`Unable to create asset from JSON`);\n    }\n  }\n\n  /**\n   * Creates and returns a new layer of the given type.\n   *\n   * @param type    Layer type string.\n   */\n  public createLayer(type: LayerType): Layer {\n    if (type === LayerType.PRECOMPOSITION) {\n      return new PrecompositionLayer(this);\n    } else if (type === LayerType.SHAPE) {\n      return new ShapeLayer(this);\n    } else if (type === LayerType.GROUP) {\n      return new GroupLayer(this);\n    } else if (type === LayerType.SOLID) {\n      return new SolidLayer(this);\n    } else if (type === LayerType.IMAGE) {\n      return new ImageLayer(this);\n    } else if (type === LayerType.TEXT) {\n      return new TextLayer(this);\n    }\n\n    throw new Error(`Invalid or unknown layer type: ${type}`);\n  }\n\n  /**\n   * Creates and returns a new layer from JSON.\n   *\n   * @param json    JSON object.\n   */\n  public createLayerFromJSON(json: Record<string, any>): Layer {\n    try {\n      const layer = this.createLayer(json.ty);\n\n      return layer.fromJSON(json);\n    } catch (e) {\n      console.log(e);\n      throw new Error(`Unable to create layer type from JSON: ${json.ty}`);\n    }\n  }\n\n  /**\n   * Creates and returns a new marker.\n   */\n  public createMarker(): Marker {\n    return new Marker();\n  }\n\n  /**\n   * Creates and returns a new marker from JSON.\n   *\n   * @param json    JSON object.\n   */\n  public createMarkerFromJSON(json: Record<string, any>): Marker {\n    try {\n      const marker = this.createMarker();\n\n      return marker.fromJSON(json);\n    } catch (e) {\n      console.log(e);\n      throw new Error(`Unable to create marker from JSON`);\n    }\n  }\n\n  /*\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       Animation instance\n   */\n  public fromJSON(json: Record<string, any>): Animation {\n    if (Animation.isLottie(json) === false) {\n      throw new Error(`The given object is not a valid Lottie JSON structure`);\n    }\n\n    this.frameRate = json.fr;\n    this.height = json.h;\n    this.inPoint = json.ip;\n    this.is3D = json.ddd;\n    this.name = json.nm;\n    this.outPoint = json.op;\n    this.version = json.v;\n    this.width = json.w;\n\n    this.assets = json.assets.map((jAsset: Record<string, any>) => this.createAssetFromJSON(jAsset)).filter(Boolean);\n\n    this.layers = json.layers.map((jLayer: Record<string, any>) => this.createLayerFromJSON(jLayer)).filter(Boolean);\n\n    this.markers = json.markers\n      .map((jMarker: Record<string, any>) => this.createMarkerFromJSON(jMarker))\n      .filter(Boolean);\n\n    if ('meta' in json) {\n      this.meta.fromJSON(json.meta);\n    }\n\n    return this;\n  }\n\n  /**\n   * Returns the layer with the given ID.\n   *\n   * @param id    Layer ID string.\n   * @returns     Layer instance.\n   */\n  public getLayerById(id: string): Layer | undefined {\n    // Validate argument type\n    if (typeof id !== 'string') {\n      throw new Error(`ID value must be a string`);\n    }\n\n    return this.layers.find((layer: Layer) => layer.id === id);\n  }\n\n  /**\n   * Returns the layers with the given class.\n   *\n   * @param className    Layer class name string.\n   * @returns            Array of layer instances.\n   */\n  public getLayersByClassName(className: string): Layer[] {\n    // Validate argument type\n    if (typeof className !== 'string') {\n      throw new Error(`Class name value must be a string`);\n    }\n\n    return this.layers.filter((layer: Layer) => layer.classNames.includes(className));\n  }\n\n  /**\n   * Returns the layers of the given type.\n   *\n   * @param type    LayerType value.\n   * @returns       Layer instance.\n   */\n  public getLayersByType(type: LayerType): Layer[] {\n    // Validate argument type\n    if (type in LayerType === false) {\n      throw new Error(`Type value must be a valid LayerType value`);\n    }\n\n    return this.layers.filter((layer: Layer) => layer.type === type);\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(key?: string): Record<string, any> | undefined {\n    if (key) {\n      return undefined;\n    }\n\n    return {\n      assets: this.assets,\n      ddd: this.is3D ? 1 : 0,\n      fr: this.frameRate,\n      h: this.height,\n      ip: this.inPoint,\n      layers: this.layers.map(layer => layer.toJSON()),\n      markers: this.markers.map(marker => marker.toJSON()),\n      meta: this.meta,\n      nm: this.name,\n      op: this.outPoint,\n      v: this.version || '5.6.0',\n      w: this.width,\n    };\n  }\n}\n","import { MaskMode } from '../constants';\n\n/**\n * Mask.\n */\nexport class Mask {\n  public isInverted = false;\n  public name = '';\n  public opacity: any;\n  public points: any;\n  public mode: MaskMode = MaskMode.Add;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       Mask instance\n   */\n  public fromJSON(json: Record<string, any>): Mask {\n    this.isInverted = json.inv;\n    this.mode = json.mode;\n    this.name = json.nm;\n    this.points = json.pt;\n    this.opacity = json.o;\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      inv: this.isInverted,\n      mode: this.mode,\n      nm: this.name,\n      o: this.opacity,\n      pt: this.points,\n    };\n  }\n}\n","import { BlendMode, GradientFillType, LineCapType, LineJoinType, PropertyType, ShapeType } from '../constants';\nimport { Gradient, Property } from '../properties';\nimport { Shape } from './shape';\n\n/**\n * Gradient stroke shape type.\n */\nexport class GradientStrokeShape extends Shape {\n  /**\n   * Gradient shape type: gs\n   */\n  public readonly type = ShapeType.GRADIENT_STROKE;\n\n  public blendMode: BlendMode = BlendMode.NORMAL;\n\n  public endPoint: Property = new Property(this, PropertyType.POSITION);\n\n  public gradientColors: Gradient = new Gradient();\n\n  public gradientType: GradientFillType = GradientFillType.LINEAR;\n\n  public highlightAngle: Property = new Property(this, PropertyType.NUMBER);\n\n  public highlightLength: Property = new Property(this, PropertyType.NUMBER);\n\n  public opacity: Property = new Property(this, PropertyType.OPACITY);\n\n  public startPoint: Property = new Property(this, PropertyType.POSITION);\n\n  /**\n   * Line cap.\n   *\n   * Mapped field: lc\n   */\n  public lineCapType: LineCapType = LineCapType.ROUND;\n\n  /**\n   * Line join.\n   *\n   * Mapped field: lj\n   */\n  public lineJoinType: LineJoinType = LineJoinType.ROUND;\n\n  /**\n   * Miter limit.\n   *\n   * Mapped field: ml\n   */\n  public miterLimit!: number;\n\n  public width: Property = new Property(this, PropertyType.STROKE_WIDTH);\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       GradientFillShape instance\n   */\n  public fromJSON(json: Record<string, any>): GradientStrokeShape {\n    // Base shape\n    this.classNames = json.cl;\n    this.id = json.ln;\n    this.isHidden = json.hd;\n    this.matchName = json.mn;\n    this.name = json.nm;\n\n    // This shape\n    this.blendMode = json.bm;\n    this.opacity.fromJSON(json.o);\n\n    // Gradient\n    this.endPoint.fromJSON(json.e);\n    this.gradientColors.fromJSON(json.g);\n    this.gradientType = json.t;\n    this.startPoint.fromJSON(json.s);\n\n    if (this.gradientType === GradientFillType.LINEAR) {\n      this.highlightAngle.fromJSON(json.a);\n      this.highlightLength.fromJSON(json.h);\n    }\n\n    // Stroke\n    this.lineCapType = json.lc in LineCapType ? json.lc : LineCapType.ROUND;\n    this.lineJoinType = json.lj in LineJoinType ? json.lj : LineJoinType.ROUND;\n    this.miterLimit = json.ml;\n    this.width.fromJSON(json.w);\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      ty: this.type,\n\n      // Base shape\n      cl: this.classNames,\n      hd: this.isHidden,\n      ln: this.id,\n      mn: this.matchName,\n      nm: this.name,\n\n      // This shape\n      bm: this.blendMode,\n      o: this.opacity,\n\n      // Gradient\n      e: this.endPoint,\n      g: this.gradientColors,\n      t: this.gradientType,\n      a: this.highlightAngle,\n      h: this.highlightLength,\n      s: this.startPoint,\n\n      // Stroke\n      lc: this.lineCapType,\n      lj: this.lineJoinType,\n      ml: this.miterLimit,\n      w: this.width,\n    };\n  }\n}\n","import { PropertyType, RepeaterComposite, ShapeType } from '../constants';\nimport { Property } from '../properties';\nimport { Shape } from './shape';\n\n/**\n * Repeater shape type.\n */\nexport class RepeaterShape extends Shape {\n  /**\n   * Repeater shape type: rp\n   */\n  public readonly type = ShapeType.REPEATER;\n\n  public anchor: Property = new Property(this, PropertyType.ANCHOR);\n\n  public startOpacity: Property = new Property(this, PropertyType.OPACITY);\n\n  public endOpacity: Property = new Property(this, PropertyType.OPACITY);\n\n  public position: Property = new Property(this, PropertyType.POSITION);\n\n  public rotation: Property = new Property(this, PropertyType.ROTATION);\n\n  public scale: Property = new Property(this, PropertyType.SCALE);\n\n  public shapes: Shape[] = [];\n\n  public skew: Property = new Property(this, PropertyType.SKEW);\n\n  public skewAxis: Property = new Property(this, PropertyType.SKEW_AXIS);\n\n  public copies: Property = new Property(this, PropertyType.NUMBER);\n\n  public offset: Property = new Property(this, PropertyType.NUMBER);\n\n  public composition: RepeaterComposite = RepeaterComposite.ABOVE;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       GroupShape instance\n   */\n  public fromJSON(json: Record<string, any>): RepeaterShape {\n    // Base shape\n    this.classNames = json.cl;\n    this.id = json.ln;\n    this.isHidden = json.hd;\n    this.matchName = json.mn;\n    this.name = json.nm;\n\n    // This shape\n    this.copies.fromJSON(json.c);\n    this.composition = json.m;\n    this.offset.fromJSON(json.o);\n\n    this.anchor.fromJSON(json.tr.a);\n    this.startOpacity.fromJSON(json.tr.so);\n    this.endOpacity.fromJSON(json.tr.eo);\n    this.position.fromJSON(json.tr.p);\n    this.rotation.fromJSON(json.tr.r);\n    this.scale.fromJSON(json.tr.s);\n\n    if (json.tr.sk) {\n      this.skew.fromJSON(json.tr.sk);\n    }\n\n    if (json.tr.sa) {\n      this.skewAxis.fromJSON(json.tr.sa);\n    }\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      ty: this.type,\n\n      // Base shape\n      cl: this.classNames,\n      hd: this.isHidden,\n      ln: this.id,\n      mn: this.matchName,\n      nm: this.name,\n\n      // This shape\n      m: this.composition,\n      c: this.copies,\n      o: this.offset,\n      tr: {\n        a: this.anchor,\n        so: this.startOpacity,\n        eo: this.endOpacity,\n        p: this.position,\n        r: this.rotation,\n        s: this.scale,\n        sk: this.skew,\n        sa: this.skewAxis,\n      },\n    };\n  }\n}\n","import { PropertyType, ShapeType, StarType } from '../constants';\nimport { Property } from '../properties';\nimport { Shape } from './shape';\n\n/**\n * Star shape type.\n */\nexport class StarShape extends Shape {\n  /**\n   * Shape type\n   */\n  public readonly type = ShapeType.STAR;\n\n  public position: Property = new Property(this, PropertyType.POSITION);\n\n  public innerRadius: Property = new Property(this, PropertyType.NUMBER);\n\n  public innerRoundness: Property = new Property(this, PropertyType.NUMBER);\n\n  public outerRadius: Property = new Property(this, PropertyType.NUMBER);\n\n  public outerRoundness: Property = new Property(this, PropertyType.NUMBER);\n\n  public rotation: Property = new Property(this, PropertyType.ROTATION);\n\n  public points: Property = new Property(this, PropertyType.NUMBER);\n\n  public starType: StarType = StarType.STAR;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       StarShape instance\n   */\n  public fromJSON(json: Record<string, any>): StarShape {\n    // Base shape\n    this.classNames = json.cl;\n    this.id = json.ln;\n    this.isHidden = json.hd;\n    this.matchName = json.mn;\n    this.name = json.nm;\n\n    // This shape\n    this.position.fromJSON(json.p);\n    this.innerRadius.fromJSON(json.ir);\n    this.innerRoundness.fromJSON(json.is);\n    this.outerRadius.fromJSON(json.or);\n    this.outerRoundness.fromJSON(json.os);\n    this.rotation.fromJSON(json.r);\n    this.points.fromJSON(json.pt);\n    this.starType = json.sy;\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      ty: this.type,\n\n      // Base shape\n      cl: this.classNames,\n      hd: this.isHidden,\n      ln: this.id,\n      mn: this.matchName,\n      nm: this.name,\n\n      // This shape\n      p: this.position,\n      ir: this.innerRadius,\n      is: this.innerRoundness,\n      or: this.outerRadius,\n      os: this.outerRoundness,\n      r: this.rotation,\n      pt: this.points,\n      sy: this.starType,\n    };\n  }\n}\n","import { PropertyType, ShapeType } from '../constants';\nimport { Property } from '../properties';\nimport { Shape } from './shape';\n\n/**\n * Rounded Corners shape type.\n */\nexport class RoundedCornersShape extends Shape {\n  /**\n   * RoundedCorners shape type: rp\n   */\n  public readonly type = ShapeType.ROUNDED_CORNERS;\n\n  public roundness: Property = new Property(this, PropertyType.NUMBER);\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       GroupShape instance\n   */\n  public fromJSON(json: Record<string, any>): RoundedCornersShape {\n    // Base shape\n    this.classNames = json.cl;\n    this.id = json.ln;\n    this.isHidden = json.hd;\n    this.matchName = json.mn;\n    this.name = json.nm;\n\n    // This shape\n    this.roundness.fromJSON(json.r);\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      ty: this.type,\n\n      // Base shape\n      cl: this.classNames,\n      hd: this.isHidden,\n      ln: this.id,\n      mn: this.matchName,\n      nm: this.name,\n\n      // This shape\n      r: this.roundness,\n    };\n  }\n}\n"],"names":["AssetType","BlendMode","FillRuleType","GradientFillType","GradientStrokeType","LayerType","LineCapType","LineJoinType","MaskMode","PropertyType","ShapeType","TrimMode","RepeaterComposite","StarType","fetch"],"mappings":"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"}